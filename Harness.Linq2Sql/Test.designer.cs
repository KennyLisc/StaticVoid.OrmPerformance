#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17379
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StaticVoid.OrmPerformance.Harness.Linq2Sql
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="StaticVoid.OrmPerformance.Harness.EntityFramework4_1.TestContext")]
	public partial class TestDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTestEntity(TestEntity instance);
    partial void UpdateTestEntity(TestEntity instance);
    partial void DeleteTestEntity(TestEntity instance);
    #endregion
		
		public TestDataContext() : 
				base(global::StaticVoid.OrmPerformance.Harness.Linq2Sql.Properties.Settings.Default.StaticVoid_OrmPerformance_Harness_EntityFramework4_1_TestContextConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public TestDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TestEntity> TestEntities
		{
			get
			{
				return this.GetTable<TestEntity>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestEntities")]
	public partial class TestEntity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TestString;
		
		private System.DateTime _TestDate;
		
		private int _TestInt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTestStringChanging(string value);
    partial void OnTestStringChanged();
    partial void OnTestDateChanging(System.DateTime value);
    partial void OnTestDateChanged();
    partial void OnTestIntChanging(int value);
    partial void OnTestIntChanged();
    #endregion
		
		public TestEntity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestString", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.WhenChanged)]
		public string TestString
		{
			get
			{
				return this._TestString;
			}
			set
			{
				if ((this._TestString != value))
				{
					this.OnTestStringChanging(value);
					this.SendPropertyChanging();
					this._TestString = value;
					this.SendPropertyChanged("TestString");
					this.OnTestStringChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestDate", DbType="DateTime NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		public System.DateTime TestDate
		{
			get
			{
				return this._TestDate;
			}
			set
			{
				if ((this._TestDate != value))
				{
					this.OnTestDateChanging(value);
					this.SendPropertyChanging();
					this._TestDate = value;
					this.SendPropertyChanged("TestDate");
					this.OnTestDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TestInt", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.WhenChanged)]
		public int TestInt
		{
			get
			{
				return this._TestInt;
			}
			set
			{
				if ((this._TestInt != value))
				{
					this.OnTestIntChanging(value);
					this.SendPropertyChanging();
					this._TestInt = value;
					this.SendPropertyChanged("TestInt");
					this.OnTestIntChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
